Средствами Vue.js реализуйте небольшое SPA приложение, имитирующее работу интернет-магазина.

На главной странице отображается список товаров с названием, изображением и ценой. Каждый товар можно тут же добавить в корзину, при чем не один раз.
Вверху отображается ссылка на страницу "Корзина" со счетчиком количества заказанных товаров.

На странице "Корзина" отображается список заказанных товаров, отсортированных по времени добавления (последний добавленный — вверху).
Товары из корзины можно удалить (по одному или все сразу), а также поменять количество заказанных наименований товара. Внизу страницы отображается общая сумма заказа.

Требования к функционалу:
- Все действия на сайте должны происходить без перезагрузки страницы.
- Интерфейс должен отвечать требованиям usability.
- После перезагрузки страницы состояние содержимого корзины должно быть сохранено.

Технические требования:
- В качестве языка разработки допускается использовать JavaScript или TypeScript.
- В качестве сборщика, если это необходимо, используйте Webpack или Parcel.
- Логика приложения должна быть разбита на разумное количество самодостаточных Vue-компонентов.

Особое внимание стоит обратить на следующие моменты:
- Код должен быть написан понятно и аккуратно, с соблюдением табуляции и прочих элементов написания, без лишних элементов и функций, не имеющих отношения к функционалу тестового задания, снабжен понятными комментариями.
- Читабельность и наличие элементарной архитектуры.
- Чистота и оформление кода — не менее важный фактор. Код должен быть написан в едином стиле (желательно в рекомендуемом для конкретного языка). Также к чистоте относятся отсутствие копипаста и дублирования логики.

Тестовое задание должно быть предоставлено в следующем виде:
- Ссылка на публичный репозиторий (GitHub, BitBucket, GitLab) с исходным кодом.
- Ссылка на сайт для тестирования функционала. Или Dockerfile и docker-compose.yaml, позволяющие развернуть локально командой docker-compose up работоспособную копию сайта.
